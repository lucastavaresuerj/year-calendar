type Calendar {
  index: String
  name: String
  user: String
  year: Int
  colNumber: Int
  title: Title
  defaultMonth: MonthGlobal
  months: [Month!]
}

input InpCalendar {
  name: String!
  year: Int!
  colNumber: Int
  title: InpTitle!
  defaultMonth: InpMonthGlobal
  months: [InpMonth!]
}

type CalendarPreview {
  index: String
  name: String
  user: String
  year: Int
  title: Title
  month: Month # Should return only the first month
}

type PagCalendarPreview implements Pagination {
  items: [CalendarPreview!]
  nextToken: String
}

extend type Query {
  calendar(id: String): Calendar
  cardPreview(pagination: InpPagination): PagCalendarPreview # Pagination
}

extend type Mutation {
  addCalendar(calendar: InpCalendar): Calendar
}
